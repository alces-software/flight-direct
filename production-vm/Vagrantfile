# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.

# Requires the version of FlightDirect that is being built
require_relative File.join(
  File.dirname(__FILE__), '..', 'lib', 'flight_direct', 'version.rb'
)

$build_dir= '/opt'
$build_root = "#{$build_dir}/flight-direct"
$tarball_name = "flight-direct-#{FlightDirect::VERSION}.tar.gz"

# NOTE: rpm-build is only installed so the omnibus build doesn't fail, and
# exits normally. The `rpm` is otherwise ignored
$script = <<-SCRIPT
  # Exit if anything exists with a non-zero status
  set -e

  # Installs the required yum packages
  yum install epel-release -y
  yum update -y
  yum install git rpm-build python-pip cmake -y

  # Checks out the build version from git
  cd ~
  git clone https://github.com/alces-software/flight-direct.git
  cd flight-direct
  git fetch
  git checkout #{FlightDirect::VERSION}

  # Installs rvm, bundler, and development gems
  . vagrant_bin/dev_bin_setup
  bundle_install_rvm
  . ~/.bashrc

  # Builds the project
  export FLIGHT_DIRECT_ROOT=#{$build_root}
  export LD_LIBRARY_PATH=$FLIGHT_DIRECT_ROOT/embedded/lib:$LD_LIBRARY_PATH
  omnibus build flight-direct

  # Creates the tarball
  cd #{$build_dir}
  tar -zcvf #{$tarball_name} flight-direct

  # Publishes the tarball to S3
  export PATH=~/.local/bin:$PATH
  pip install awscli --upgrade --user
  aws s3 cp #{$tarball_name} s3://flight-direct/releases/el7/#{$tarball_name} --grants read=uri=http://acs.amazonaws.com/groups/global/AllUsers
SCRIPT

Vagrant.configure(2) do |config|
  config.vm.box = 'centos/7'
  config.vm.network "private_network", type: 'dhcp'
  config.vm.synced_folder ".", "/vagrant", disabled: true

  # Runs the deployment script
  env_vars = ['AWS_ACCESS_KEY_ID', 'AWS_SECRET_ACCESS_KEY']
  config.vm.provision 'shell', inline: $script,
    env: env_vars.map { |v| [v, ENV[v]] }.to_h
  config.vm.provider('virtualbox') { |v| v.cpus = `nproc`.to_i }
end
